# version: '3.8'
# services:
#   api-gateway:
#     build: ./api-gateway
#     ports:
#       - "8000:8000"
#     depends_on:
#       solver-service:
#         condition: service_healthy
#       visualization-service:
#         condition: service_healthy
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://0.0.0.0:8000/health"]
#       interval: 10s
#       timeout: 5s
#       start_period: 10s
#       retries: 3

#   solver-service:
#     build: ./solver-service
#     ports:
#       - "8002:8002"  # Назначил новый внешний порт
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://0.0.0.0:8002/health"]
#       interval: 10s
#       timeout: 5s
#       start_period: 10s
#       retries: 3

#   visualization-service:
#     build: ./visualization-service
#     ports:
#       - "8003:8003"  # Назначил новый внешний порт
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://0.0.0.0:8003/health"]
#       interval: 10s
#       timeout: 5s
#       start_period: 10s
#       retries: 3

#   client:
#     build: ./client
#     depends_on:
#       api-gateway:
#         condition: service_healthy
#     environment:
#       - SOLVER_HOST=solver-service
#       - VISUALIZATION_HOST=visualization-service
#     stdin_open: true
#     tty: true

# networks:
#   default:
#     name: sos-network
#     driver: bridge

# version: '3.8'

services:
  api-gateway:
    build: ./api-gateway
    ports:
      - "8000:8000"
    environment:
      - SOLVER_SERVICE_URL=http://solver-service:8002
      - VISUALIZATION_SERVICE_URL=http://visualization-service:8003
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8000/health"]
      interval: 10s
      timeout: 5s
      start_period: 15s
      retries: 5
    networks:
      - sos-network

  solver-service:
    build: ./solver-service
    environment:
      - PORT=8002
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8002/health"]
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 3
    networks:
      - sos-network

  visualization-service:
    build: ./visualization-service
    environment:
      - PORT=8003
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8003/health"]
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 3
    networks:
      - sos-network


  client:
    build: ./client
    depends_on:
      api-gateway:
        condition: service_healthy
    restart: "no"  # Важно: не перезапускать после завершения
    environment:
      - API_GATEWAY_URL=http://api-gateway:8000
    # build: ./client
    # environment:
    #   - API_GATEWAY_URL=http://api-gateway:8000
    # stdin_open: true
    # tty: true
    # depends_on:
    #   api-gateway:
    #     condition: service_healthy
    networks:
      - sos-network

networks:
  sos-network:
    driver: bridge



